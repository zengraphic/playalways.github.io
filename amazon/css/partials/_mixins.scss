

@mixin breakpoint($name) {
    @if map-has-key($breakpoints, $name) {
        @media #{inspect(map-get($breakpoints, $name))} {
            @content;
        }
    }
    @else {
        @warn "Couldn't find a your breakpoint named `#{$name}`.";
    }
}

// $font_pairs:('small':2,'medium':4,'large':6);
// @mixin font_classes($font_pair) {
//     @if map-has-key($font_pairs, $font_pair){
//         @debug map-get($font_pairs, $font_pair);
//         @debug $font_pair;
//         @for $i from 1 through $steps {
//                 .font_size_#{$i * map-get($font_pairs, $font_pair)} {
//                     font-size: map-get($font_pairs, $font_pair) * $i +px;
//                     line-height: map-get($font_pairs, $font_pair) * $i * 1.2 +px;
//                 }
//             }
//     }
// }
// @include font_classes(small);
// @include font_classes(medium);
// @include font_classes(large);
// 
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
    /* stops bg color from leaking outside the border: */
}

// OPACITY
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}